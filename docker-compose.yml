version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  orders_api:
    image: orders_api_image  # Replace with the built image of your Orders API
    build:
      context: ./OrdersService  # Path to your ASP.NET Orders API project
    ports:
      - "3001:80"  # Orders API exposed on port 3001
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - POSTGRES_HOST=postgres
      - ASPNETCORE_ENVIRONMENT=Development

  inventory_api:
    image: inventory_api_image  # Replace with the built image of your Python Inventory API
    build:
      context: ./InventoryService  # Path to your Inventory API
    ports:
      - "3002:3002"  # Inventory API exposed on port 3002
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - app-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MONGO_HOST=mongodb

  product_api:
    image: product_api_image  # Replace with the built image of your Spring Boot Product API
    build:
      context: ./ProductService  # Path to your Spring Boot Product API
    ports:
      - "3003:8080"  # Product API exposed on port 3003
    depends_on:
      - postgres
    networks:
      - app-network
    environment:
      - POSTGRES_HOST=postgres

  gateway:
    image: gateway_image  # Replace with the built image of your Node.js API Gateway
    build:
      context: ./Gateway  # Path to your Node.js API Gateway
    ports:
      - "3000:3000"  # Gateway exposed on port 3000
    depends_on:
      - orders_api
      - inventory_api
      - product_api
    networks:
      - app-network
    environment:
      - ORDERS_API_URL=http://orders_api:80
      - INVENTORY_API_URL=http://inventory_api:3002
      - PRODUCT_API_URL=http://product_api:8080

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ordersdb  # Orders DB
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pg_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo_data:/data/db

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
  pg_data:
  mongo_data:
